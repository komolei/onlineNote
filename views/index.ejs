<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="/css/app.css" type="text/css" rel="stylesheet">
    <title>onLine note</title>
</head>
<body>
<header>
    <div>
        <div class="addNote">
            + Add Note
        </div>
        <% if (!isLogin) { %>
        <a href="/auth/github"><div class="login">GitHub LogIn</div></a>
        <% } else { %>
        <div class="login"><img src="<%= user.avatar %>" alt="avatar" / >  <span><%= user.username %> · </span> <a href="/auth/logout"><span class="logOut">注销</span></a></div>
        <% } %>
    </div>
</header>
<div class="waterfall ct">

</div>
<div class="bot">
    <input type="text" id="komolei" placeholder="chat with robot" value="robot">
    <button>chat</button>
</div>
<script src="/js/app.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
  // let socket = io('http://localhost');
  let socket = io();
  socket.on('chat', function (msg) {
    new Toast(`rebot:${msg}`);
    showMsg(msg);
  })
  document.querySelector('button').addEventListener('click', function () {
    socket.emit('chat',document.querySelector('#komolei').value);
  })
  function showMsg(msg) {
    if (!("Notification" in window)) {
      console.log("This browser does not support desktop notification");
    }
    else if (Notification.permission === "granted") {
      var notification = new Notification(msg);
    }
    else if (Notification.permission !== 'denied' || Notification.permission === "default") {
      Notification.requestPermission(function (permission) {
        if (permission === "granted") {
          var notification = new Notification(msg);
        }
      });
    }
//    let p = document.createElement('p');
//    p.innerText = msg;
//    document.body.appendChild(p);
    console.log("msg:", msg);
  }
  socket.on('connect', function () { });
  socket.on('event', function (data) { });
  socket.on('disconnect', function () { });

</script>
</body>
</html>